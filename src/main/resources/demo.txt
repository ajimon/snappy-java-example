package com.ajimon.snappy;

import static org.xerial.snappy.Snappy.compress;
import static org.xerial.snappy.Snappy.uncompress;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;

public class SnappyCompressionDemo {

    public static void main(String[] args) throws IOException {

        FileInputStream fis = new FileInputStream(new File("/tmp/textfile.txt"));
        FileChannel channel = fis.getChannel();
        ByteBuffer bb = ByteBuffer.allocate((int) channel.size());
        channel.read(bb);
        byte[] beforeBytes = bb.array();

        //compress
        System.out.println("Before snappy compress size：" + beforeBytes.length + " bytes");
        long startTime1 = System.currentTimeMillis();
        byte[] afterBytes = compress(beforeBytes);
        long endTime1 = System.currentTimeMillis();
        System.out.println("after snappy compress size：" + afterBytes.length + " bytes");
        System.out.println("snappy compress time elapsed：" + (endTime1 - startTime1)
                + "ms");

        //uncompress
        long startTime2 = System.currentTimeMillis();
        byte[] resultBytes = uncompress(afterBytes);
        System.out.println("snappy uncompress size：" + resultBytes.length + " bytes");
        long endTime2 = System.currentTimeMillis();
        System.out.println("uncompress time elapsed：" + (endTime2 - startTime2)
                + "ms");

    }

}
